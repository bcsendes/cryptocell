CREATE EXTENSION IF NOT EXISTS "uuid-ossp"
    SCHEMA public
    VERSION "1.1";

CREATE TABLESPACE ts_2018
  OWNER cryptogt
  LOCATION '/var/lib/postgresql/tbsp/ts_2018';

ALTER TABLESPACE ts_2018
  OWNER TO cryptogt;
  
CREATE TABLESPACE ts_2019
  OWNER cryptogt
  LOCATION '/var/lib/postgresql/tbsp/ts_2019';

ALTER TABLESPACE ts_2019
  OWNER TO cryptogt;
  
CREATE TABLESPACE ts_2020
  OWNER cryptogt
  LOCATION '/var/lib/postgresql/tbsp/ts_2020';

ALTER TABLESPACE ts_2020
  OWNER TO cryptogt;
  
CREATE TABLESPACE ts_2021
  OWNER cryptogt
  LOCATION '/var/lib/postgresql/tbsp/ts_2021';

ALTER TABLESPACE ts_2021
  OWNER TO cryptogt;
  
CREATE TABLESPACE ts_2022
  OWNER cryptogt
  LOCATION '/var/lib/postgresql/tbsp/ts_2022';

ALTER TABLESPACE ts_2022
  OWNER TO cryptogt;    
  
CREATE TABLESPACE ts_2023
  OWNER cryptogt
  LOCATION '/var/lib/postgresql/tbsp/ts_2023';

ALTER TABLESPACE ts_2023
  OWNER TO cryptogt;    
  
CREATE TABLESPACE ts_2024
  OWNER cryptogt
  LOCATION '/var/lib/postgresql/tbsp/ts_2024';

ALTER TABLESPACE ts_2024
  OWNER TO cryptogt;   
  
CREATE TABLESPACE ts_2025
  OWNER cryptogt
  LOCATION '/var/lib/postgresql/tbsp/ts_2025';

ALTER TABLESPACE ts_2025
  OWNER TO cryptogt;   
  
CREATE TABLESPACE ts_2026
  OWNER cryptogt
  LOCATION '/var/lib/postgresql/tbsp/ts_2026';

ALTER TABLESPACE ts_2026
  OWNER TO cryptogt;
  
CREATE TABLESPACE ts_2027
  OWNER cryptogt
  LOCATION '/var/lib/postgresql/tbsp/ts_2027';

ALTER TABLESPACE ts_2027
  OWNER TO cryptogt;     
  
CREATE TABLESPACE ts_2028
  OWNER cryptogt
  LOCATION '/var/lib/postgresql/tbsp/ts_2028';

ALTER TABLESPACE ts_2028
  OWNER TO cryptogt;   
  
CREATE TABLESPACE ts_2029
  OWNER cryptogt
  LOCATION '/var/lib/postgresql/tbsp/ts_2029';

ALTER TABLESPACE ts_2029
  OWNER TO cryptogt;   
  
CREATE TABLESPACE ts_2030
  OWNER cryptogt
  LOCATION '/var/lib/postgresql/tbsp/ts_2030';

ALTER TABLESPACE ts_2030
  OWNER TO cryptogt;   

CREATE TABLESPACE ts_index
  OWNER cryptogt
  LOCATION '/var/lib/postgresql/tbsp/ts_index';

ALTER TABLESPACE ts_index
  OWNER TO cryptogt; 
  
CREATE TABLESPACE ts_log
  OWNER cryptogt
  LOCATION '/var/lib/postgresql/tbsp/ts_log';

ALTER TABLESPACE ts_log
  OWNER TO cryptogt;   

CREATE TABLE public.logs
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    eventtime timestamp with time zone,
    module text COLLATE pg_catalog."default",
    symbol text COLLATE pg_catalog."default",
    severity integer,
    message text COLLATE pg_catalog."default",
    sourceid text COLLATE pg_catalog."default",
    sourcetype text COLLATE pg_catalog."default",
    sourcename text COLLATE pg_catalog."default",
    payload text COLLATE pg_catalog."default",
    CONSTRAINT log_pkey PRIMARY KEY (id)
) TABLESPACE ts_log;

ALTER TABLE public.logs
    OWNER to cryptogt;
    
CREATE INDEX logs_eventtime
    ON public.logs USING btree
    (eventtime ASC NULLS LAST)
    TABLESPACE ts_log;

CREATE INDEX logs_id
    ON public.logs USING btree
    (id ASC NULLS LAST)
    TABLESPACE ts_log;

CREATE INDEX logs_message
    ON public.logs USING btree
    (message COLLATE pg_catalog."default" text_pattern_ops ASC NULLS LAST)
    TABLESPACE ts_log;

CREATE INDEX logs_module
    ON public.logs USING btree
    (module COLLATE pg_catalog."default" ASC NULLS LAST)
    TABLESPACE ts_log;

CREATE INDEX logs_severity
    ON public.logs USING btree
    (severity ASC NULLS LAST)
    TABLESPACE ts_log;

CREATE INDEX logs_symbol
    ON public.logs USING btree
    (symbol COLLATE pg_catalog."default" ASC NULLS LAST)
    TABLESPACE ts_log;    
    

CREATE TABLE IF NOT EXISTS public.settings
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    symbol text COLLATE pg_catalog."default",
    modul text COLLATE pg_catalog."default",
    paramname text COLLATE pg_catalog."default",
    paramvalue real,
    paramtag1 text COLLATE pg_catalog."default",
    paramtag2 text COLLATE pg_catalog."default",
    CONSTRAINT settings_pkey PRIMARY KEY (id)
) TABLESPACE pg_default;

ALTER TABLE public.settings
    OWNER to cryptogt;

CREATE INDEX settings_modul
    ON public.settings USING btree
    (modul COLLATE pg_catalog."default" ASC NULLS LAST)
    TABLESPACE ts_index;

CREATE INDEX settings_paramname
    ON public.settings USING btree
    (paramname COLLATE pg_catalog."default" ASC NULLS LAST)
    TABLESPACE ts_index;

CREATE INDEX settings_search01
    ON public.settings USING btree
    (paramvalue ASC NULLS LAST, paramtag1 COLLATE pg_catalog."default" ASC NULLS LAST, paramname COLLATE pg_catalog."default" ASC NULLS LAST)
    TABLESPACE ts_index;

CREATE INDEX settings_search02
    ON public.settings USING btree
    (symbol COLLATE pg_catalog."default" ASC NULLS LAST, paramname COLLATE pg_catalog."default" ASC NULLS LAST)
    TABLESPACE ts_index;

CREATE INDEX settings_search03
    ON public.settings USING btree
    (symbol COLLATE pg_catalog."default" ASC NULLS LAST, paramvalue ASC NULLS LAST, paramtag1 COLLATE pg_catalog."default" ASC NULLS LAST, paramname COLLATE pg_catalog."default" ASC NULLS LAST)
    TABLESPACE ts_index;

CREATE INDEX settings_search04
    ON public.settings USING btree
    (paramtag1 COLLATE pg_catalog."default" ASC NULLS LAST, paramname COLLATE pg_catalog."default" ASC NULLS LAST)
    INCLUDE(symbol)
    TABLESPACE ts_index;

CREATE INDEX settings_symbol
    ON public.settings USING btree
    (symbol COLLATE pg_catalog."default" ASC NULLS LAST)
    TABLESPACE pg_default;
    
CREATE TABLE IF NOT EXISTS public.candles_lastprice
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    symbol text COLLATE pg_catalog."default",
    eventtime timestamp without time zone,
    starttime timestamp without time zone NOT NULL,
    endtime timestamp without time zone,
    "interval" text COLLATE pg_catalog."default",
    closeprice real,
    CONSTRAINT candles_lastprice_pkey PRIMARY KEY (id)
) TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.candles_lastprice
    OWNER to cryptogt;

CREATE INDEX IF NOT EXISTS candles_lastprice_interval
    ON public.candles_lastprice USING btree
    ("interval" COLLATE pg_catalog."default" ASC NULLS LAST)
    INCLUDE(symbol, closeprice)
    TABLESPACE ts_index;

CREATE UNIQUE INDEX IF NOT EXISTS candles_lastprice_search01
    ON public.candles_lastprice USING btree
    (symbol COLLATE pg_catalog."default" ASC NULLS LAST, "interval" COLLATE pg_catalog."default" ASC NULLS LAST)
    TABLESPACE ts_index;
        
CREATE TABLE public.candles_$crypto
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    guid uuid DEFAULT uuid_generate_v4(),
    symbol text COLLATE pg_catalog."default",
    eventtime timestamp without time zone,
    starttime timestamp without time zone NOT NULL,
    endtime timestamp without time zone,
    "interval" text COLLATE pg_catalog."default",
    openprice real,
    closeprice real,
    highprice real,
    lowprice real,
    basevolume real,
    quotevolume real,
    isclosed boolean,
    numoftrades integer,
    takerbuybasevolume real,
    takerbuyquotevolume real,
    volrange0 real,
    volrange1 real,
    volrange2 real,
    volrange3 real,
    volrange4 real,
    volrange5 real,
    obvolume0 real,
    obvolume1 real,
    obvolume2 real,
    obvolume3 real,
    obvolume4 real,
    obvolume5 real,
    CONSTRAINT candles_$crypto_pkey PRIMARY KEY (id, starttime)
) PARTITION BY RANGE (starttime);

ALTER TABLE public.candles_$crypto
    OWNER to cryptogt;
CREATE INDEX candles_$crypto_interval
    ON public.candles_$crypto USING btree
    ("interval" COLLATE pg_catalog."default" ASC NULLS LAST) TABLESPACE ts_index;
CREATE UNIQUE INDEX candles_$crypto_search01
    ON public.candles_$crypto USING btree
    (starttime DESC NULLS LAST, "interval" COLLATE pg_catalog."default" ASC NULLS LAST) TABLESPACE ts_index;
CREATE INDEX candles_$crypto_starttime
    ON public.candles_$crypto USING btree
    (starttime DESC NULLS LAST) TABLESPACE ts_index;

CREATE TABLE public.p2018_$crypto PARTITION OF public.candles_$crypto
    FOR VALUES FROM ('2018-01-01 00:00:00') TO ('2018-12-31 23:59:59') TABLESPACE ts_2018;

ALTER TABLE public.p2018_$crypto
    OWNER to cryptogt;

CREATE TABLE public.p2019_$crypto PARTITION OF public.candles_$crypto
    FOR VALUES FROM ('2019-01-01 00:00:00') TO ('2019-12-31 23:59:59') TABLESPACE ts_2019;

ALTER TABLE public.p2019_$crypto
    OWNER to cryptogt;

CREATE TABLE public.p2020_$crypto PARTITION OF public.candles_$crypto
    FOR VALUES FROM ('2020-01-01 00:00:00') TO ('2020-12-31 23:59:59') TABLESPACE ts_2020;

ALTER TABLE public.p2020_$crypto
    OWNER to cryptogt;

CREATE TABLE public.p2021_$crypto PARTITION OF public.candles_$crypto
    FOR VALUES FROM ('2021-01-01 00:00:00') TO ('2021-12-31 23:59:59') TABLESPACE ts_2021;
    
ALTER TABLE public.p2021_$crypto
    OWNER to cryptogt;    

CREATE TABLE public.p2022_$crypto PARTITION OF public.candles_$crypto
    FOR VALUES FROM ('2022-01-01 00:00:00') TO ('2022-12-31 23:59:59') TABLESPACE ts_2022;

ALTER TABLE public.p2022_$crypto
    OWNER to cryptogt;
    
CREATE TABLE public.p2023_$crypto PARTITION OF public.candles_$crypto
    FOR VALUES FROM ('2023-01-01 00:00:00') TO ('2023-12-31 23:59:59') TABLESPACE ts_2023;

ALTER TABLE public.p2023_$crypto
    OWNER to cryptogt; 
    
CREATE TABLE public.p2024_$crypto PARTITION OF public.candles_$crypto
    FOR VALUES FROM ('2024-01-01 00:00:00') TO ('2024-12-31 23:59:59') TABLESPACE ts_2024;

ALTER TABLE public.p2024_$crypto
    OWNER to cryptogt;
    
CREATE TABLE public.p2025_$crypto PARTITION OF public.candles_$crypto
    FOR VALUES FROM ('2025-01-01 00:00:00') TO ('2025-12-31 23:59:59') TABLESPACE ts_2025;

ALTER TABLE public.p2025_$crypto
    OWNER to cryptogt;  
    
CREATE TABLE public.p2026_$crypto PARTITION OF public.candles_$crypto
    FOR VALUES FROM ('2026-01-01 00:00:00') TO ('2026-12-31 23:59:59') TABLESPACE ts_2026;

ALTER TABLE public.p2026_$crypto
    OWNER to cryptogt;                

CREATE TABLE public.p2027_$crypto PARTITION OF public.candles_$crypto
    FOR VALUES FROM ('2027-01-01 00:00:00') TO ('2027-12-31 23:59:59') TABLESPACE ts_2027;

ALTER TABLE public.p2027_$crypto
    OWNER to cryptogt;
    
CREATE TABLE public.p2028_$crypto PARTITION OF public.candles_$crypto
    FOR VALUES FROM ('2028-01-01 00:00:00') TO ('2028-12-31 23:59:59') TABLESPACE ts_2028;

ALTER TABLE public.p2028_$crypto
    OWNER to cryptogt;  
    
CREATE TABLE public.p2029_$crypto PARTITION OF public.candles_$crypto
    FOR VALUES FROM ('2029-01-01 00:00:00') TO ('2029-12-31 23:59:59') TABLESPACE ts_2029;

ALTER TABLE public.p2029_$crypto
    OWNER to cryptogt;
    
CREATE TABLE public.p2030_$crypto PARTITION OF public.candles_$crypto
    FOR VALUES FROM ('2030-01-01 00:00:00') TO ('2030-12-31 23:59:59') TABLESPACE ts_2030;

ALTER TABLE public.p2030_$crypto
    OWNER to cryptogt;              

INSERT INTO public.candles_$crypto (symbol, starttime, "interval") VALUES (UPPER('$crypto')::text, to_timestamp(1514764860), '1m');
INSERT INTO public.candles_$crypto (symbol, starttime,  "interval") VALUES (UPPER('$crypto')::text, to_timestamp(1514765100), '5m');
INSERT INTO public.candles_$crypto (symbol, starttime,  "interval") VALUES (UPPER('$crypto')::text, to_timestamp(1514765700), '15m');
INSERT INTO public.candles_$crypto (symbol, starttime,  "interval") VALUES (UPPER('$crypto')::text, to_timestamp(1514766600), '30m');
INSERT INTO public.candles_$crypto (symbol, starttime,  "interval") VALUES (UPPER('$crypto')::text, to_timestamp(1514768400), '1h');
INSERT INTO public.candles_$crypto (symbol, starttime,  "interval") VALUES (UPPER('$crypto')::text, to_timestamp(1514779200), '4h');
INSERT INTO public.candles_$crypto (symbol, starttime,  "interval") VALUES (UPPER('$crypto')::text, to_timestamp(1514851200), '1d');
INSERT INTO public.candles_$crypto (symbol, starttime,  "interval") VALUES (UPPER('$crypto')::text, to_timestamp(1515369600), '1w');


CREATE TABLE public.ma_$crypto
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    guid uuid DEFAULT uuid_generate_v4(),
    candleid integer,
    symbol text COLLATE pg_catalog."default",
    starttime timestamp without time zone,
    "interval" text COLLATE pg_catalog."default",
    openprice real, closeprice real, highprice real, lowprice real,
    sma3 real, ema3 real, sma5 real, ema5 real, sma6 real, ema6 real, sma7 real, ema7 real, sma8 real, ema8 real, sma9 real, ema9 real, sma10 real, ema10 real,
    sma11 real, ema11 real, sma12 real, ema12 real, sma13 real, ema13 real, sma14 real, ema14 real, sma16 real, ema16 real, sma17 real, ema17 real,
    sma19 real, ema19 real, sma20 real, ema20 real, sma21 real, ema21 real, sma26 real, ema26 real, sma30 real, ema30 real, sma34 real, ema34 real,
    sma35 real, ema35 real, sma36 real, ema36 real, sma50 real, ema50 real, sma60 real, ema60 real, sma100 real, ema100 real,
    obvt real, obvb real, obvs real,
    CONSTRAINT ma_$crypto_pkey PRIMARY KEY (id, starttime)
) PARTITION BY RANGE (starttime);

ALTER TABLE public.ma_$crypto
    OWNER to cryptogt;

GRANT ALL ON TABLE public.ma_$crypto TO cryptogt;

CREATE UNIQUE INDEX ma_$crypto_search01
    ON public.ma_$crypto USING btree
    (starttime DESC NULLS LAST, "interval" COLLATE pg_catalog."default" ASC NULLS LAST) TABLESPACE ts_index;


CREATE INDEX ma_$crypto_starttime
    ON public.ma_$crypto USING btree
    (starttime DESC NULLS LAST) TABLESPACE ts_index;

CREATE TABLE public.p2018_ma_$crypto PARTITION OF public.ma_$crypto
    FOR VALUES FROM ('2018-01-01 00:00:00') TO ('2018-12-31 23:59:59') TABLESPACE ts_2018;

ALTER TABLE public.p2018_ma_$crypto
    OWNER to cryptogt;

CREATE TABLE public.p2019_ma_$crypto PARTITION OF public.ma_$crypto
    FOR VALUES FROM ('2019-01-01 00:00:00') TO ('2019-12-31 23:59:59') TABLESPACE ts_2019;

ALTER TABLE public.p2019_ma_$crypto
    OWNER to cryptogt;

CREATE TABLE public.p2020_ma_$crypto PARTITION OF public.ma_$crypto
    FOR VALUES FROM ('2020-01-01 00:00:00') TO ('2020-12-31 23:59:59') TABLESPACE ts_2020;

ALTER TABLE public.p2020_ma_$crypto
    OWNER to cryptogt;

CREATE TABLE public.p2021_ma_$crypto PARTITION OF public.ma_$crypto
    FOR VALUES FROM ('2021-01-01 00:00:00') TO ('2021-12-31 23:59:59') TABLESPACE ts_2021;
    
ALTER TABLE public.p2021_ma_$crypto
    OWNER to cryptogt;    

CREATE TABLE public.p2022_ma_$crypto PARTITION OF public.ma_$crypto
    FOR VALUES FROM ('2022-01-01 00:00:00') TO ('2022-12-31 23:59:59') TABLESPACE ts_2022;

ALTER TABLE public.p2022_ma_$crypto
    OWNER to cryptogt;
    
CREATE TABLE public.p2023_ma_$crypto PARTITION OF public.ma_$crypto
    FOR VALUES FROM ('2023-01-01 00:00:00') TO ('2023-12-31 23:59:59') TABLESPACE ts_2023;

ALTER TABLE public.p2023_ma_$crypto
    OWNER to cryptogt;
    
CREATE TABLE public.p2024_ma_$crypto PARTITION OF public.ma_$crypto
    FOR VALUES FROM ('2024-01-01 00:00:00') TO ('2024-12-31 23:59:59') TABLESPACE ts_2024;

ALTER TABLE public.p2024_ma_$crypto
    OWNER to cryptogt;
    
CREATE TABLE public.p2025_ma_$crypto PARTITION OF public.ma_$crypto
    FOR VALUES FROM ('2025-01-01 00:00:00') TO ('2025-12-31 23:59:59') TABLESPACE ts_2025;

ALTER TABLE public.p2025_ma_$crypto
    OWNER to cryptogt;
    
CREATE TABLE public.p2026_ma_$crypto PARTITION OF public.ma_$crypto
    FOR VALUES FROM ('2026-01-01 00:00:00') TO ('2026-12-31 23:59:59') TABLESPACE ts_2026;

ALTER TABLE public.p2026_ma_$crypto
    OWNER to cryptogt;    
    
CREATE TABLE public.p2027_ma_$crypto PARTITION OF public.ma_$crypto
    FOR VALUES FROM ('2027-01-01 00:00:00') TO ('2027-12-31 23:59:59') TABLESPACE ts_2027;

ALTER TABLE public.p2027_ma_$crypto
    OWNER to cryptogt;
    
CREATE TABLE public.p2028_ma_$crypto PARTITION OF public.ma_$crypto
    FOR VALUES FROM ('2028-01-01 00:00:00') TO ('2028-12-31 23:59:59') TABLESPACE ts_2028;

ALTER TABLE public.p2028_ma_$crypto
    OWNER to cryptogt;
    
CREATE TABLE public.p2029_ma_$crypto PARTITION OF public.ma_$crypto
    FOR VALUES FROM ('2029-01-01 00:00:00') TO ('2029-12-31 23:59:59') TABLESPACE ts_2029;

ALTER TABLE public.p2029_ma_$crypto
    OWNER to cryptogt;  
    
CREATE TABLE public.p2030_ma_$crypto PARTITION OF public.ma_$crypto
    FOR VALUES FROM ('2030-01-01 00:00:00') TO ('2030-12-31 23:59:59') TABLESPACE ts_2030;

ALTER TABLE public.p2030_ma_$crypto
    OWNER to cryptogt;                          

CREATE TABLE public.max_$crypto
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    guid uuid DEFAULT uuid_generate_v4(), candleid integer, symbol text COLLATE pg_catalog."default", starttime timestamp without time zone, "interval" text COLLATE pg_catalog."default",
    openprice real, closeprice real, highprice real, lowprice real, bb9u real, bb9m real, bb9d real, bb9p real, bb9w real, bb10u real, bb10m real, bb10d real, bb10p real, bb10w real, bb12u real, bb12m real, bb12d real, bb12p real, bb12w real, bb20u real, bb20m real, bb20d real, bb20p real, bb20w real, bb21u real, bb21m real, bb21d real, bb21p real, bb21w real,
    macd real, macds real, macdh real, mfi7 real, mfi14 real, psar18 real, psar19 real, psar20 real, psar21 real, psar22 real, atr7 real, atr14 real,
    roc7 real, roc9 real, roc14 real, roc25 real, psar18acc real, psar19acc real, psar20acc real, psar21acc real, psar22acc real,
    adx7 real, adx9 real, adx14 real, adx25 real, psarep18high real, psarep18low real, psarep19high real, psarep19low real, psarep20high real, psarep20low real, psarep21high real, psarep21low real, psarep22high real, psarep22low real,
    tr7 real, tr9 real, tr14 real, tr25 real, dmip7 real, dmin7 real, dmip9 real, dmin9 real, dmip14 real, dmin14 real, dmip25 real, dmin25 real,
    psar18sn integer DEFAULT 0, psar19sn integer DEFAULT 0, psar20sn integer DEFAULT 0, psar21sn integer DEFAULT 0, psar22sn integer DEFAULT 0,
    CONSTRAINT max_$crypto_pkey PRIMARY KEY (id, starttime)
) PARTITION BY RANGE (starttime);

ALTER TABLE public.max_$crypto
    OWNER to cryptogt;

GRANT ALL ON TABLE public.max_$crypto TO cryptogt;

CREATE UNIQUE INDEX max_$crypto_search01
    ON public.max_$crypto USING btree
    (starttime DESC NULLS LAST, "interval" COLLATE pg_catalog."default" ASC NULLS LAST) TABLESPACE ts_index;

CREATE INDEX max_$crypto_starttime
    ON public.max_$crypto USING btree
    (starttime DESC NULLS LAST) TABLESPACE ts_index;

CREATE TABLE public.p2018_max_$crypto PARTITION OF public.max_$crypto
    FOR VALUES FROM ('2018-01-01 00:00:00') TO ('2018-12-31 23:59:59') TABLESPACE ts_2018;

ALTER TABLE public.p2018_max_$crypto
    OWNER to cryptogt;

CREATE TABLE public.p2019_max_$crypto PARTITION OF public.max_$crypto
    FOR VALUES FROM ('2019-01-01 00:00:00') TO ('2019-12-31 23:59:59') TABLESPACE ts_2019;

ALTER TABLE public.p2019_max_$crypto
    OWNER to cryptogt;

CREATE TABLE public.p2020_max_$crypto PARTITION OF public.max_$crypto
    FOR VALUES FROM ('2020-01-01 00:00:00') TO ('2020-12-31 23:59:59') TABLESPACE ts_2020;

ALTER TABLE public.p2020_ma_$crypto
    OWNER to cryptogt;

CREATE TABLE public.p2021_max_$crypto PARTITION OF public.max_$crypto
    FOR VALUES FROM ('2021-01-01 00:00:00') TO ('2021-12-31 23:59:59') TABLESPACE ts_2021;

ALTER TABLE public.p2021_max_$crypto
    OWNER to cryptogt;

CREATE TABLE public.p2022_max_$crypto PARTITION OF public.max_$crypto
    FOR VALUES FROM ('2022-01-01 00:00:00') TO ('2022-12-31 23:59:59') TABLESPACE ts_2022;

ALTER TABLE public.p2022_max_$crypto
    OWNER to cryptogt;
    
CREATE TABLE public.p2023_max_$crypto PARTITION OF public.max_$crypto
    FOR VALUES FROM ('2023-01-01 00:00:00') TO ('2023-12-31 23:59:59') TABLESPACE ts_2023;

ALTER TABLE public.p2023_max_$crypto
    OWNER to cryptogt;    
    
CREATE TABLE public.p2024_max_$crypto PARTITION OF public.max_$crypto
    FOR VALUES FROM ('2024-01-01 00:00:00') TO ('2024-12-31 23:59:59') TABLESPACE ts_2024;

ALTER TABLE public.p2024_max_$crypto
    OWNER to cryptogt;     
    
CREATE TABLE public.p2025_max_$crypto PARTITION OF public.max_$crypto
    FOR VALUES FROM ('2025-01-01 00:00:00') TO ('2025-12-31 23:59:59') TABLESPACE ts_2025;

ALTER TABLE public.p2025_max_$crypto
    OWNER to cryptogt;     
    
CREATE TABLE public.p2026_max_$crypto PARTITION OF public.max_$crypto
    FOR VALUES FROM ('2026-01-01 00:00:00') TO ('2026-12-31 23:59:59') TABLESPACE ts_2026;

ALTER TABLE public.p2026_max_$crypto
    OWNER to cryptogt;     
    
CREATE TABLE public.p2027_max_$crypto PARTITION OF public.max_$crypto
    FOR VALUES FROM ('2027-01-01 00:00:00') TO ('2027-12-31 23:59:59') TABLESPACE ts_2027;

ALTER TABLE public.p2027_max_$crypto
    OWNER to cryptogt;
    
CREATE TABLE public.p2028_max_$crypto PARTITION OF public.max_$crypto
    FOR VALUES FROM ('2028-01-01 00:00:00') TO ('2028-12-31 23:59:59') TABLESPACE ts_2028;

ALTER TABLE public.p2028_max_$crypto
    OWNER to cryptogt;        
    
CREATE TABLE public.p2029_max_$crypto PARTITION OF public.max_$crypto
    FOR VALUES FROM ('2029-01-01 00:00:00') TO ('2029-12-31 23:59:59') TABLESPACE ts_2029;

ALTER TABLE public.p2029_max_$crypto
    OWNER to cryptogt; 
    
CREATE TABLE public.p2030_max_$crypto PARTITION OF public.max_$crypto
    FOR VALUES FROM ('2030-01-01 00:00:00') TO ('2030-12-31 23:59:59') TABLESPACE ts_2030;

ALTER TABLE public.p2030_max_$crypto
    OWNER to cryptogt;          
    
CREATE TABLE public.pattern_$crypto
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
	guid uuid DEFAULT uuid_generate_v4 (), candleid integer , symbol text COLLATE pg_catalog."default", starttime timestamp without time zone,
    "interval" text COLLATE pg_catalog."default", closeprice real, simplepattern text COLLATE pg_catalog."default", complexpattern text COLLATE pg_catalog."default",			
    CONSTRAINT pattern_$crypto_pkey PRIMARY KEY (id, starttime)
) PARTITION BY RANGE (starttime);
	
CREATE INDEX pattern_$crypto_starttime
    ON public.pattern_$crypto USING btree
    (starttime DESC NULLS LAST) TABLESPACE ts_index;


CREATE TABLE public.p2018_pattern_$crypto PARTITION OF public.pattern_$crypto
    FOR VALUES FROM ('2018-01-01 00:00:00') TO ('2018-12-31 23:59:59') TABLESPACE ts_2018;

ALTER TABLE public.p2018_pattern_$crypto
    OWNER to cryptogt;

CREATE TABLE public.p2019_pattern_$crypto PARTITION OF public.pattern_$crypto
    FOR VALUES FROM ('2019-01-01 00:00:00') TO ('2019-12-31 23:59:59') TABLESPACE ts_2019;

ALTER TABLE public.p2019_pattern_$crypto
    OWNER to cryptogt;

CREATE TABLE public.p2020_pattern_$crypto PARTITION OF public.pattern_$crypto
    FOR VALUES FROM ('2020-01-01 00:00:00') TO ('2020-12-31 23:59:59') TABLESPACE ts_2020;

ALTER TABLE public.p2020_pattern_$crypto
    OWNER to cryptogt;

CREATE TABLE public.p2021_pattern_$crypto PARTITION OF public.pattern_$crypto
    FOR VALUES FROM ('2021-01-01 00:00:00') TO ('2021-12-31 23:59:59') TABLESPACE ts_2021;

ALTER TABLE public.p2021_pattern_$crypto
    OWNER to cryptogt;

CREATE TABLE public.p2022_pattern_$crypto PARTITION OF public.pattern_$crypto
    FOR VALUES FROM ('2022-01-01 00:00:00') TO ('2022-12-31 23:59:59') TABLESPACE ts_2022;

ALTER TABLE public.p2022_pattern_$crypto
    OWNER to cryptogt;
    
CREATE TABLE public.p2023_pattern_$crypto PARTITION OF public.pattern_$crypto
    FOR VALUES FROM ('2023-01-01 00:00:00') TO ('2023-12-31 23:59:59') TABLESPACE ts_2023;

ALTER TABLE public.p2023_pattern_$crypto
    OWNER to cryptogt;
    
CREATE TABLE public.p2024_pattern_$crypto PARTITION OF public.pattern_$crypto
    FOR VALUES FROM ('2024-01-01 00:00:00') TO ('2024-12-31 23:59:59') TABLESPACE ts_2024;

ALTER TABLE public.p2024_pattern_$crypto
    OWNER to cryptogt;    

CREATE TABLE public.p2025_pattern_$crypto PARTITION OF public.pattern_$crypto
    FOR VALUES FROM ('2025-01-01 00:00:00') TO ('2025-12-31 23:59:59') TABLESPACE ts_2025;

ALTER TABLE public.p2025_pattern_$crypto
    OWNER to cryptogt;

CREATE TABLE public.p2026_pattern_$crypto PARTITION OF public.pattern_$crypto
    FOR VALUES FROM ('2026-01-01 00:00:00') TO ('2026-12-31 23:59:59') TABLESPACE ts_2026;

ALTER TABLE public.p2026_pattern_$crypto
    OWNER to cryptogt;
    
CREATE TABLE public.p2027_pattern_$crypto PARTITION OF public.pattern_$crypto
    FOR VALUES FROM ('2027-01-01 00:00:00') TO ('2027-12-31 23:59:59') TABLESPACE ts_2027;

ALTER TABLE public.p2027_pattern_$crypto
    OWNER to cryptogt;
    
CREATE TABLE public.p2028_pattern_$crypto PARTITION OF public.pattern_$crypto
    FOR VALUES FROM ('2028-01-01 00:00:00') TO ('2028-12-31 23:59:59') TABLESPACE ts_2028;

ALTER TABLE public.p2028_pattern_$crypto
    OWNER to cryptogt;
    
CREATE TABLE public.p2029_pattern_$crypto PARTITION OF public.pattern_$crypto
    FOR VALUES FROM ('2029-01-01 00:00:00') TO ('2029-12-31 23:59:59') TABLESPACE ts_2029;

ALTER TABLE public.p2029_pattern_$crypto
    OWNER to cryptogt;  
    
CREATE TABLE public.p2030_pattern_$crypto PARTITION OF public.pattern_$crypto
    FOR VALUES FROM ('2030-01-01 00:00:00') TO ('2030-12-31 23:59:59') TABLESPACE ts_2030;

ALTER TABLE public.p2030_pattern_$crypto
    OWNER to cryptogt;                      

CREATE TABLE public.peak_$crypto
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    guid uuid DEFAULT uuid_generate_v4(),
    candleid integer,
    symbol text COLLATE pg_catalog."default",
    starttime timestamp without time zone,
    peaktime timestamp without time zone,
    endtime timestamp without time zone,
    "interval" text COLLATE pg_catalog."default",
    openprice real,
    closeprice real,
    highprice real,
    lowprice real,
    indicator text COLLATE pg_catalog."default",
    peak real,
    bottom real,
    highestpeak real,
    lowestbottom real,
    fibosupport1 real,
    fibosupport2 real,
    fibosupport3 real,
    fibosupport4 real,
    fibosupport5 real,
    fiboresistance1 real,
    fiboresistance2 real,
    fiboresistance3 real,
    fiboresistance4 real,
    peaksn integer DEFAULT 0,
    bottomsn integer DEFAULT 0,
    fibotimezone0 timestamp without time zone,
    fibotimezone1 timestamp without time zone,
    fibotimezone2 timestamp without time zone,
    fibotimezone3 timestamp without time zone,
    fibotimezone4 timestamp without time zone,      
    CONSTRAINT peak_$crypto_pkey PRIMARY KEY (id, starttime)
) PARTITION BY RANGE (starttime);

ALTER TABLE public.peak_$crypto
    OWNER to cryptogt;

GRANT ALL ON TABLE public.peak_$crypto TO cryptogt;

CREATE UNIQUE INDEX peak_$crypto_combo
    ON public.peak_$crypto USING btree
    (starttime DESC NULLS LAST, symbol COLLATE pg_catalog."default" ASC NULLS LAST, candleid ASC NULLS LAST, "interval" COLLATE pg_catalog."default" ASC NULLS LAST, indicator COLLATE pg_catalog."default" ASC NULLS LAST)
    TABLESPACE ts_index;

CREATE INDEX peak_$crypto_endtime
    ON public.peak_$crypto USING btree
    (endtime DESC NULLS LAST)
    TABLESPACE ts_index;

CREATE INDEX peak_$crypto_indicator
    ON public.peak_$crypto USING btree
    (indicator COLLATE pg_catalog."default" ASC NULLS LAST)
    TABLESPACE ts_index;

CREATE INDEX peak_$crypto_interval
    ON public.peak_$crypto USING btree
    ("interval" COLLATE pg_catalog."default" ASC NULLS LAST)
    TABLESPACE ts_index;

CREATE INDEX peak_$crypto_starttime
    ON public.peak_$crypto USING btree
    (starttime DESC NULLS LAST)
    TABLESPACE ts_index;
    
CREATE INDEX peak_$crypto_peaktime 
	ON public.peak_$crypto USING btree 
	(peaktime DESC NULLS LAST)  
	TABLESPACE ts_index;
	
CREATE INDEX peak_$crypto_search03 
	ON public.peak_$crypto USING btree 
	(peaktime DESC NULLS LAST, "interval" COLLATE pg_catalog."default" ASC NULLS LAST, indicator COLLATE pg_catalog."default" ASC NULLS LAST) INCLUDE(peak, bottom, highestpeak, lowestbottom)
	TABLESPACE ts_index;

CREATE TABLE public.p2018_peak_$crypto PARTITION OF public.peak_$crypto
    FOR VALUES FROM ('2018-01-01 00:00:00') TO ('2018-12-31 23:59:59') TABLESPACE ts_2018;

ALTER TABLE public.p2018_peak_$crypto
    OWNER to cryptogt;

CREATE TABLE public.p2019_peak_$crypto PARTITION OF public.peak_$crypto
    FOR VALUES FROM ('2019-01-01 00:00:00') TO ('2019-12-31 23:59:59') TABLESPACE ts_2019;

ALTER TABLE public.p2019_peak_$crypto
    OWNER to cryptogt;

CREATE TABLE public.p2020_peak_$crypto PARTITION OF public.peak_$crypto
    FOR VALUES FROM ('2020-01-01 00:00:00') TO ('2020-12-31 23:59:59') TABLESPACE ts_2020;

ALTER TABLE public.p2020_peak_$crypto
    OWNER to cryptogt;

CREATE TABLE public.p2021_peak_$crypto PARTITION OF public.peak_$crypto
    FOR VALUES FROM ('2021-01-01 00:00:00') TO ('2021-12-31 23:59:59') TABLESPACE ts_2021;

ALTER TABLE public.p2021_peak_$crypto
    OWNER to cryptogt;   

CREATE TABLE public.p2022_peak_$crypto PARTITION OF public.peak_$crypto
    FOR VALUES FROM ('2022-01-01 00:00:00') TO ('2022-12-31 23:59:59') TABLESPACE ts_2022;

ALTER TABLE public.p2022_peak_$crypto
    OWNER to cryptogt; 
    
CREATE TABLE public.p2023_peak_$crypto PARTITION OF public.peak_$crypto
    FOR VALUES FROM ('2023-01-01 00:00:00') TO ('2023-12-31 23:59:59') TABLESPACE ts_2023;

ALTER TABLE public.p2023_peak_$crypto
    OWNER to cryptogt;  
    
CREATE TABLE public.p2024_peak_$crypto PARTITION OF public.peak_$crypto
    FOR VALUES FROM ('2024-01-01 00:00:00') TO ('2024-12-31 23:59:59') TABLESPACE ts_2024;

ALTER TABLE public.p2024_peak_$crypto
    OWNER to cryptogt;
    
CREATE TABLE public.p2025_peak_$crypto PARTITION OF public.peak_$crypto
    FOR VALUES FROM ('2025-01-01 00:00:00') TO ('2025-12-31 23:59:59') TABLESPACE ts_2025;

ALTER TABLE public.p2025_peak_$crypto
    OWNER to cryptogt;
    
CREATE TABLE public.p2026_peak_$crypto PARTITION OF public.peak_$crypto
    FOR VALUES FROM ('2026-01-01 00:00:00') TO ('2026-12-31 23:59:59') TABLESPACE ts_2026;

ALTER TABLE public.p2026_peak_$crypto
    OWNER to cryptogt;
    
CREATE TABLE public.p2027_peak_$crypto PARTITION OF public.peak_$crypto
    FOR VALUES FROM ('2027-01-01 00:00:00') TO ('2027-12-31 23:59:59') TABLESPACE ts_2027;

ALTER TABLE public.p2027_peak_$crypto
    OWNER to cryptogt;
    
CREATE TABLE public.p2028_peak_$crypto PARTITION OF public.peak_$crypto
    FOR VALUES FROM ('2028-01-01 00:00:00') TO ('2028-12-31 23:59:59') TABLESPACE ts_2028;

ALTER TABLE public.p2028_peak_$crypto
    OWNER to cryptogt;
    
CREATE TABLE public.p2029_peak_$crypto PARTITION OF public.peak_$crypto
    FOR VALUES FROM ('2029-01-01 00:00:00') TO ('2029-12-31 23:59:59') TABLESPACE ts_2029;

ALTER TABLE public.p2029_peak_$crypto
    OWNER to cryptogt;
    
CREATE TABLE public.p2030_peak_$crypto PARTITION OF public.peak_$crypto
    FOR VALUES FROM ('2030-01-01 00:00:00') TO ('2030-12-31 23:59:59') TABLESPACE ts_2030;

ALTER TABLE public.p2030_peak_$crypto
    OWNER to cryptogt;                                         
    
CREATE TABLE public.rsi_$crypto
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
	guid uuid DEFAULT uuid_generate_v4 (), candleid integer , symbol text COLLATE pg_catalog."default", starttime timestamp without time zone,
    "interval" text COLLATE pg_catalog."default", closeprice real, avgup6 real, avgdown6 real, rsi6 real, avgup7 real, avgdown7 real,	
    rsi7 real, avgup8 real, avgdown8 real, rsi8 real, avgup9 real, avgdown9 real, rsi9 real, avgup10 real, avgdown10 real, rsi10 real,
    avgup11 real, avgdown11 real, rsi11 real, avgup12 real, avgdown12 real,	rsi12 real, avgup13 real, avgdown13 real, rsi13 real,	
    avgup14 real, avgdown14 real, rsi14 real, avgup15 real, avgdown15 real,	rsi15 real,	avgup16 real, avgdown16 real, rsi16 real,	
    avgup17 real, avgdown17 real, rsi17 real, avgup18 real, avgdown18 real,	rsi18 real,	avgup19 real, avgdown19 real, rsi19 real,	
    avgup20 real, avgdown20 real, rsi20 real, avgup21 real, avgdown21 real,	rsi21 real,	avgup22 real, avgdown22 real, rsi22 real,	
    avgup23 real, avgdown23 real, rsi23 real, avgup24 real, avgdown24 real,	rsi24 real,		
    CONSTRAINT rsi_$crypto_pkey PRIMARY KEY (id, starttime)
) PARTITION BY RANGE (starttime);

CREATE UNIQUE INDEX rsi_$crypto_search01
    ON public.rsi_$crypto USING btree
    (starttime DESC NULLS LAST, "interval" COLLATE pg_catalog."default" ASC NULLS LAST) TABLESPACE ts_index;
	
CREATE INDEX rsi_$crypto_starttime
    ON public.rsi_$crypto USING btree
    (starttime DESC NULLS LAST) TABLESPACE ts_index;

CREATE TABLE public.p2018_rsi_$crypto PARTITION OF public.rsi_$crypto
    FOR VALUES FROM ('2018-01-01 00:00:00') TO ('2018-12-31 23:59:59') TABLESPACE ts_2018;

ALTER TABLE public.p2018_rsi_$crypto
    OWNER to cryptogt;

CREATE TABLE public.p2019_rsi_$crypto PARTITION OF public.rsi_$crypto
    FOR VALUES FROM ('2019-01-01 00:00:00') TO ('2019-12-31 23:59:59') TABLESPACE ts_2019;

ALTER TABLE public.p2019_rsi_$crypto
    OWNER to cryptogt;

CREATE TABLE public.p2020_rsi_$crypto PARTITION OF public.rsi_$crypto
    FOR VALUES FROM ('2020-01-01 00:00:00') TO ('2020-12-31 23:59:59') TABLESPACE ts_2020;

ALTER TABLE public.p2020_rsi_$crypto
    OWNER to cryptogt;

CREATE TABLE public.p2021_rsi_$crypto PARTITION OF public.rsi_$crypto
    FOR VALUES FROM ('2021-01-01 00:00:00') TO ('2021-12-31 23:59:59') TABLESPACE ts_2021;

ALTER TABLE public.p2021_rsi_$crypto
    OWNER to cryptogt;

CREATE TABLE public.p2022_rsi_$crypto PARTITION OF public.rsi_$crypto
    FOR VALUES FROM ('2022-01-01 00:00:00') TO ('2022-12-31 23:59:59') TABLESPACE ts_2022;

ALTER TABLE public.p2022_rsi_$crypto
    OWNER to cryptogt;

CREATE TABLE public.p2023_rsi_$crypto PARTITION OF public.rsi_$crypto
    FOR VALUES FROM ('2023-01-01 00:00:00') TO ('2023-12-31 23:59:59') TABLESPACE ts_2023;

ALTER TABLE public.p2023_rsi_$crypto
    OWNER to cryptogt;

CREATE TABLE public.p2024_rsi_$crypto PARTITION OF public.rsi_$crypto
    FOR VALUES FROM ('2024-01-01 00:00:00') TO ('2024-12-31 23:59:59') TABLESPACE ts_2024;

ALTER TABLE public.p2024_rsi_$crypto
    OWNER to cryptogt;

CREATE TABLE public.p2025_rsi_$crypto PARTITION OF public.rsi_$crypto
    FOR VALUES FROM ('2025-01-01 00:00:00') TO ('2025-12-31 23:59:59') TABLESPACE ts_2025;

ALTER TABLE public.p2025_rsi_$crypto
    OWNER to cryptogt;

CREATE TABLE public.p2026_rsi_$crypto PARTITION OF public.rsi_$crypto
    FOR VALUES FROM ('2026-01-01 00:00:00') TO ('2026-12-31 23:59:59') TABLESPACE ts_2026;

ALTER TABLE public.p2026_rsi_$crypto
    OWNER to cryptogt;

CREATE TABLE public.p2027_rsi_$crypto PARTITION OF public.rsi_$crypto
    FOR VALUES FROM ('2027-01-01 00:00:00') TO ('2027-12-31 23:59:59') TABLESPACE ts_2027;

ALTER TABLE public.p2027_rsi_$crypto
    OWNER to cryptogt;

CREATE TABLE public.p2028_rsi_$crypto PARTITION OF public.rsi_$crypto
    FOR VALUES FROM ('2028-01-01 00:00:00') TO ('2028-12-31 23:59:59') TABLESPACE ts_2028;

ALTER TABLE public.p2028_rsi_$crypto
    OWNER to cryptogt;

CREATE TABLE public.p2029_rsi_$crypto PARTITION OF public.rsi_$crypto
    FOR VALUES FROM ('2029-01-01 00:00:00') TO ('2029-12-31 23:59:59') TABLESPACE ts_2029;

ALTER TABLE public.p2029_rsi_$crypto
    OWNER to cryptogt;
    
CREATE TABLE public.p2030_rsi_$crypto PARTITION OF public.rsi_$crypto
    FOR VALUES FROM ('2030-01-01 00:00:00') TO ('2030-12-31 23:59:59') TABLESPACE ts_2030;

ALTER TABLE public.p2030_rsi_$crypto
    OWNER to cryptogt;    
	
CREATE TABLE public.rsx_$crypto
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
	guid uuid DEFAULT uuid_generate_v4 (), candleid integer , symbol text COLLATE pg_catalog."default", starttime timestamp without time zone,
    "interval" text COLLATE pg_catalog."default", closeprice real, rsx6 real, rsx7 real, rsx8 real, rsx9 real, rsx10 real,
    rsx11 real, rsx12 real, rsx13 real,	rsx14 real, rsx15 real,	rsx16 real, rsx17 real, rsx18 real,	rsx19 real,	
    rsx20 real, rsx21 real,	rsx22 real,	rsx23 real, rsx24 real,		
    CONSTRAINT rsx_$crypto_pkey PRIMARY KEY (id, starttime)
) PARTITION BY RANGE (starttime);

CREATE UNIQUE INDEX rsx_$crypto_search01 
	ON public.rsx_$crypto USING btree 
	(starttime DESC NULLS LAST, "interval" COLLATE pg_catalog."default" ASC NULLS LAST) TABLESPACE ts_index;
    
CREATE INDEX rsx_$crypto_candleid
    ON public.rsx_$crypto USING btree
    (candleid ASC NULLS LAST) TABLESPACE ts_index;    		

CREATE TABLE public.p2018_rsx_$crypto PARTITION OF public.rsx_$crypto
    FOR VALUES FROM ('2018-01-01 00:00:00') TO ('2018-12-31 23:59:59') TABLESPACE ts_2018;

ALTER TABLE public.p2018_rsx_$crypto
    OWNER to cryptogt;

CREATE TABLE public.p2019_rsx_$crypto PARTITION OF public.rsx_$crypto
    FOR VALUES FROM ('2019-01-01 00:00:00') TO ('2019-12-31 23:59:59') TABLESPACE ts_2019;

ALTER TABLE public.p2019_rsx_$crypto
    OWNER to cryptogt;

CREATE TABLE public.p2020_rsx_$crypto PARTITION OF public.rsx_$crypto
    FOR VALUES FROM ('2020-01-01 00:00:00') TO ('2020-12-31 23:59:59') TABLESPACE ts_2020;

ALTER TABLE public.p2020_rsx_$crypto
    OWNER to cryptogt;

CREATE TABLE public.p2021_rsx_$crypto PARTITION OF public.rsx_$crypto
    FOR VALUES FROM ('2021-01-01 00:00:00') TO ('2021-12-31 23:59:59') TABLESPACE ts_2021;

ALTER TABLE public.p2021_rsx_$crypto
    OWNER to cryptogt;

CREATE TABLE public.p2022_rsx_$crypto PARTITION OF public.rsx_$crypto
    FOR VALUES FROM ('2022-01-01 00:00:00') TO ('2022-12-31 23:59:59') TABLESPACE ts_2022;

ALTER TABLE public.p2022_rsx_$crypto
    OWNER to cryptogt;
    
CREATE TABLE public.p2023_rsx_$crypto PARTITION OF public.rsx_$crypto
    FOR VALUES FROM ('2023-01-01 00:00:00') TO ('2023-12-31 23:59:59') TABLESPACE ts_2023;

ALTER TABLE public.p2023_rsx_$crypto
    OWNER to cryptogt;    
   
CREATE TABLE public.p2024_rsx_$crypto PARTITION OF public.rsx_$crypto
    FOR VALUES FROM ('2024-01-01 00:00:00') TO ('2024-12-31 23:59:59') TABLESPACE ts_2024;

ALTER TABLE public.p2024_rsx_$crypto
    OWNER to cryptogt;  
    
CREATE TABLE public.p2025_rsx_$crypto PARTITION OF public.rsx_$crypto
    FOR VALUES FROM ('2025-01-01 00:00:00') TO ('2025-12-31 23:59:59') TABLESPACE ts_2025;

ALTER TABLE public.p2025_rsx_$crypto
    OWNER to cryptogt;  
    
CREATE TABLE public.p2026_rsx_$crypto PARTITION OF public.rsx_$crypto
    FOR VALUES FROM ('2026-01-01 00:00:00') TO ('2026-12-31 23:59:59') TABLESPACE ts_2026;

ALTER TABLE public.p2026_rsx_$crypto
    OWNER to cryptogt;        
    
CREATE TABLE public.p2027_rsx_$crypto PARTITION OF public.rsx_$crypto
    FOR VALUES FROM ('2027-01-01 00:00:00') TO ('2027-12-31 23:59:59') TABLESPACE ts_2027;

ALTER TABLE public.p2027_rsx_$crypto
    OWNER to cryptogt;    
    
CREATE TABLE public.p2028_rsx_$crypto PARTITION OF public.rsx_$crypto
    FOR VALUES FROM ('2028-01-01 00:00:00') TO ('2028-12-31 23:59:59') TABLESPACE ts_2028;

ALTER TABLE public.p2028_rsx_$crypto
    OWNER to cryptogt;    

CREATE TABLE public.p2029_rsx_$crypto PARTITION OF public.rsx_$crypto
    FOR VALUES FROM ('2029-01-01 00:00:00') TO ('2029-12-31 23:59:59') TABLESPACE ts_2029;

ALTER TABLE public.p2029_rsx_$crypto
    OWNER to cryptogt;
    
CREATE TABLE public.p2030_rsx_$crypto PARTITION OF public.rsx_$crypto
    FOR VALUES FROM ('2030-01-01 00:00:00') TO ('2030-12-31 23:59:59') TABLESPACE ts_2030;

ALTER TABLE public.p2030_rsx_$crypto
    OWNER to cryptogt;    

CREATE OR REPLACE VIEW public.$crypto001 AS SELECT c1.id, c1.starttime, c1."interval", c1.openprice, c1.closeprice, c1.highprice, c1.lowprice, c1.basevolume, c1.quotevolume, c1.numoftrades, c2.bb20u, c2.bb20m, c2.bb20d, c2.bb20p, c2.bb20w, c2.mfi7, c2.mfi14, c2.psar20 FROM candles_$crypto c1 JOIN max_$crypto c2 ON c1.id = c2.candleid;
ALTER TABLE public.$crypto001 OWNER TO cryptogt;
COMMENT ON VIEW public.$crypto001 IS 'candles, bband20, mfi7, mfi14, psar20 ';

CREATE OR REPLACE VIEW public.$crypto002 AS SELECT c1.id, c1.symbol, c1.starttime, c1."interval", c1.closeprice, c1.rsi7, c1.rsi14, c1.rsi24, c2.rsx7, c2.rsx14, c2.rsx24 FROM rsi_$crypto c1 JOIN rsx_$crypto c2 ON c1.candleid = c2.candleid;
ALTER TABLE public.$crypto002 OWNER TO cryptogt;
COMMENT ON VIEW public.$crypto002 IS 'rsx7, rsx14, rsx24, rsi7, rsi14, rsi24';
           
           
INSERT INTO public.settings (
symbol, modul, paramname, paramvalue) VALUES (
UPPER('$crypto')::text, 'AMIGO'::text, 'stepsize'::text, '0.001'::real);
 
INSERT INTO public.settings (
symbol, modul, paramname, paramvalue) VALUES (
UPPER('$crypto')::text, 'AMIGO'::text, 'maxqty'::text, '900000'::real);
 
INSERT INTO public.settings (
symbol, modul, paramname, paramvalue) VALUES (
UPPER('$crypto')::text, 'AMIGO'::text, 'minnotional'::text, '10'::real);
 
INSERT INTO public.settings (
symbol, modul, paramname, paramvalue) VALUES (
UPPER('$crypto')::text, 'AMIGO'::text, 'minqty'::text, '0.001'::real);
 
INSERT INTO public.settings (
symbol, modul, paramname, paramvalue) VALUES (
UPPER('$crypto')::text, 'AMIGO'::text, 'minprice'::text, '0.001'::real);
 
INSERT INTO public.settings (
symbol, modul, paramname, paramvalue) VALUES (
UPPER('$crypto')::text, 'AMIGO'::text, 'maxprice'::text, '10000'::real);
 
INSERT INTO public.settings (
symbol, modul, paramname, paramvalue) VALUES (
UPPER('$crypto')::text, 'AMIGO'::text, 'ticksize'::text, '0.001'::real);

INSERT INTO public.settings (
modul, symbol, paramname, paramvalue) VALUES (
'AMIGO'::text, UPPER('$crypto')::text, 'enabled'::text, '0'::real);
 
INSERT INTO public.settings (
symbol, modul, paramname, paramvalue) VALUES (
UPPER('$crypto')::text, 'BACKTEST'::text, 'starttime'::text, '1.5147648e+09'::real);
 
INSERT INTO public.settings (
symbol, modul, paramname, paramvalue, paramtag1) VALUES (
UPPER('$crypto')::text, 'GRAFANA'::text, 'view002'::text, '1'::real, '$crypto002'::text);
 
INSERT INTO public.settings (
modul, symbol, paramname, paramvalue, paramtag1) VALUES (
'GRAFANA'::text, UPPER('$crypto')::text, 'view001'::text, '1'::real, '$crypto001'::text);
 
INSERT INTO public.settings (
symbol, modul, paramname, paramvalue) VALUES (
UPPER('$crypto')::text, 'QUERY'::text, 'longcandleheigth'::text, '10'::real);
 
INSERT INTO public.settings (
symbol, modul, paramname, paramvalue) VALUES (
UPPER('$crypto')::text, 'QUERY'::text, 'volumejump'::text, '2'::real);
 
INSERT INTO public.settings (
symbol, modul, paramname, paramvalue) VALUES (
UPPER('$crypto')::text, 'QUERY'::text, 'longtailrate'::text, '2'::real);
 
INSERT INTO public.settings (
symbol, modul, paramname, paramvalue) VALUES (
UPPER('$crypto')::text, 'QUERY'::text, 'orderbooklimit'::text, '0.090'::real);

INSERT INTO public.settings (
modul, symbol, paramname, paramvalue, paramtag2) VALUES (
'HITMAN'::text, UPPER('$crypto')::text, 'timestage1'::text, '4'::real, '2021.10.23'::text);

INSERT INTO public.settings (
modul, symbol, paramname, paramvalue, paramtag2) VALUES (
'HITMAN'::text, UPPER('$crypto')::text, 'timestage2'::text, '28'::real, '2021.10.23'::text);